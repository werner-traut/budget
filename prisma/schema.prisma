generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "postgresqlExtensions"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  extensions = [hstore(schema: "myHstoreSchema"), pg_trgm, postgis(version: "2.1")]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model adhoc_settings {
  id           String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id      String   @unique @db.Uuid
  daily_amount Decimal  @default(40.00) @db.Decimal(10, 2)
  created_at   DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at   DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  users        users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "adhoc_user_id_fkey")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model balance_history {
  id                         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id                    String?   @db.Uuid
  bank_balance               Decimal   @db.Decimal(10, 2)
  current_period_end_balance Decimal   @db.Decimal(10, 2)
  next_period_end_balance    Decimal   @db.Decimal(10, 2)
  period_after_end_balance   Decimal   @db.Decimal(10, 2)
  created_at                 DateTime  @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  balance_date               DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  updated_at                 DateTime? @db.Timestamptz(6)
  users                      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, balance_date], map: "balance_history_user_id_date_idx")
  @@index([user_id, created_at])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model budget_items {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String   @db.Uuid
  name       String
  amount     Decimal  @db.Decimal(10, 2)
  due_date   DateTime @db.Date
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model daily_balances {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String   @db.Uuid
  balance    Decimal  @db.Decimal(10, 2)
  date       DateTime @db.Date
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, date], map: "unique_user_daily_balance")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pay_periods {
  id            String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id       String      @db.Uuid
  period_type   period_type
  start_date    DateTime    @db.Date
  salary_amount Decimal     @db.Decimal(10, 2)
  created_at    DateTime    @default(now()) @db.Timestamptz(6)
  updated_at    DateTime    @default(now()) @db.Timestamptz(6)
  users         users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id              String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email           String            @unique
  name            String?
  avatar_url      String?
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  updated_at      DateTime          @default(now()) @db.Timestamptz(6)
  adhoc_settings  adhoc_settings?
  balance_history balance_history[]
  budget_items    budget_items[]
  daily_balances  daily_balances[]
  pay_periods     pay_periods[]

  @@index([email])
}

enum period_type {
  CURRENT_PERIOD
  NEXT_PERIOD
  PERIOD_AFTER
  FUTURE_PERIOD
  CLOSED_PERIOD
}
